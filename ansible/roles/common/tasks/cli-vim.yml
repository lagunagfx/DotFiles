---
  - name: install both Vim and NeoVim
    become: yes
    ansible.builtin.package:
      name:
        - vim
        - neovim
      state: present
           
  - name: check if .vimrc is a regular file or link to its repo counterpart
    ansible.builtin.file:
      src: /home/jorge/Documentos/DotFiles/vim/vimrc.user
      dest: /home/jorge/.vimrc
      state: link
      force: yes

  - name: copy a basic .vimrc configfile for ROOT user
    become: yes
    ansible.builtin.copy:
      src: ~/Documentos/DotFiles/vim/vimrc.noplugins
      dest: /root/.vimrc      

  - name: check if ~/.vim folder exits
    ansible.builtin.stat:
      path: /home/jorge/.vim
    register: folder_vim

  - name: create .vim folder
    ansible.builtin.file:
      path: /home/jorge/.vim
      state: directory
      mode: '0755'
    when: folder_vim.stat.exists == false

# temporarily disabled since Github has blocked VundleVim repo without notice

  - name: clone VimVundle repository from GitHub
    ansible.builtin.git:
      repo: https://github.com/VundleVim/Vundle.vim.git
      dest: /home/jorge/.vim/bundle/Vundle.vim

  - name: link NeoVim's init.vim to Vim's vimrc
    ansible.builtin.file:
      src: /home/jorge/.vimrc
      dest: /home/jorge/.vim/init.vim
      state: link
       
  - name: link NeoVim's .config/nvim to Vim's .vim
    ansible.builtin.file:
      src: /home/jorge/.vim
      dest: /home/jorge/.config/nvim
      state: link

  - name: install Vundle plugin
    ansible.builtin.shell:
      cmd: nvim +PluginInstall +qall --headless
    register: vimvundle
    # avoid Ansible registering every call to Vundle's PluginInstall as "change" 
    changed_when: vimvundle.stdout | length > 0

# end of tasks list
